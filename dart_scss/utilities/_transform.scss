// scale
.scale {
  @for $i from 0 through 20 {
    $scale: floor(math.div(($i * 10), 100));
    $e: $i;
    @if $i >9 {
      $e: str-slice(#{$e}, 2, 2);
    }

    @at-root .scale-#{$scale}\.#{$e} {
      transform: scale(math.div(($i * 10), 100));
    }
  }
}
// translate
.translate {
  @for $i from 0 through 10 {
    &-x-#{$i * 10} {
      transform: translateX($i * 10%);
    }
    &-y-#{$i*10} {
      transform: translateY($i * 10%);
    }
    &-xy-#{$i*10} {
      transform: translate($i * 10%, $i * 10%);
    }
  }
}
//skew
.skew {
  @for $i from 0 through 10 {
    &-x-#{$i * 10} {
      transform: skewX($i * 10deg);
    }
    &-y-#{$i*10} {
      transform: skewY($i * 10deg);
    }
    &-xy-#{$i*10} {
      transform: skew($i * 10deg, $i * 10deg);
    }
  }
}
// rotate
.rotate {
  @for $i from 0 through 36 {
    &-#{$i * 10} {
      transform: rotate($i * 10deg);
    }
    &x-#{$i * 10} {
      transform: rotateX($i * 10deg);
    }
    &y-#{$i*10} {
      transform: rotateY($i * 10deg);
    }
    &z-#{$i*10} {
      transform: rotateZ($i * 10deg);
    }
  }
}

// origin
.origin {
  @each $value in $transform-origin {
    &-#{$value} {
      transform-origin: $value;
    }
  }
  &-bottom {
    &-left {
      transform-origin: bottom left;
    }
    &-right {
      transform-origin: bottom right;
    }
  }
  &-top {
    &-left {
      transform-origin: top left;
    }
    &-right {
      transform-origin: top right;
    }
  }
}

// scale
// matrix
// translate(x, y)
// rotate
// skew

// Keyword values
// transform: none;

// Function values
// transform: matrix(1.0, 2.0, 3.0, 4.0, 5.0, 6.0);

// transform: translate(12px, 50%);
// transform: translateX(2em);
// transform: translateY(3in);

// transform: scale(2, 0.5);
// transform: scaleX(2);
// transform: scaleY(0.5);

// transform: rotate(0.5turn);

// transform: skew(30deg, 20deg);
// transform: skewX(30deg);
// transform: skewY(1.07rad);

// transform: matrix3d(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0);
// transform: translate3d(12px, 50%, 3em);
// transform: translateZ(2px);

// transform: scale3d(2.5, 1.2, 0.3);
// transform: scaleZ(0.3);

// transform: rotate3d(1, 2.0, 3.0, 10deg);
// transform: rotateX(10deg);
// transform: rotateY(10deg);
// transform: rotateZ(10deg);

// transform: perspective(17px);

// Multiple function values
// transform: translateX(10px) rotate(10deg) translateY(5px);

// Global values
// transform: inherit;
// transform: initial;
// transform: unset;
